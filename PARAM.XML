<!-- The syntax is described by share/Scripts/CheckParam.pl and the manual -->

<commandList name="Rice Convection Model 2: IM Component">

<commandgroup name="Testing">

<command name="STRICT">
	<parameter name="UseStrict" type="logical" default="T" />

#STRICT
T                       UseStrict

If true then stop when parameters are incompatible. If false, try to
correct parameters and continue. Default is true, ie. strict mode.
</command>

</commandgroup>

<commandgroup name="Output">
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! OUTPUT !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
<command name="ASCII">
	<parameter name="IsAscii" type="logical" default="T"/>

#ASCII
T			IsAscii

The input and output files for RCM can be either ascii or binary.
Default value is true for ascii.

</command>

<command name="RCMDIR">
	<parameter name="NameRcmDir" type="string" length="100"
						default="IM"/>

#RCMDIR
IM			NameRcmDir

The NameRcmDir variable contains the name of the directory to store
output files. Default value is "IM". Don't change this unless you know
what you are doing.

</command>


<command name="SAVEPLOTNAME">
	 <parameter name="UseEventPlotName" type="logical" default="F"/>
#SAVEPLOTNAME
T			UseEvenPlotName

If UseEventPlotName is true, the names of the plot files will contain
the event date and time in the YearMoDy_HrMnSc format. If it is false,
the simulation time is used in the HourMnSc format.

The default value is false.
</command>

<command name="SAVEPLOT">
  <parameter name="nFilesPlot" type="integer" min="0" max="9"
	     default="0" />
  <for from="1" to="$nFilesPlot">
    <parameter name="StringPlot" type="strings" min="3" max="3">
      <part name="plotarea" type="string" input="select"
	    required="T">
	<option name="2D vars." value="2d/2D"
		default="T"/>
	<option name="3D vars." value="3d/2D"/>
      </part>
      <part name="plotvar" type="string" input="select"
	    required="T">
	<option name="minimum set"
		value="min/MIN" default="T"/>
	<option name="maximum set"
		value="max/MAX/rcm/RCM"/>
	<option name="CCMC set 1"
		value="mc1/MC1/mc1/Mc1"/>
	<option name="CCMC set 2"
		value="mc2/MC2/mc2/Mc2"/>
      </part>
      <part name="plotformat" type="string" input="select"
	    required="T">
	<option name="TECPLOT" value="tec/TEC"
		default="T"/>
	<option name="IDL"     value="idl/IDL"
		if="$plotarea =~ /2d/i" />
      </part>
    </parameter>
    <parameter name="DnSavePlot" type="integer" min="-1" />
    <parameter name="iDtSavePlot" type="integer" min="-1" />
  </for>

#SAVEPLOT
4			nFilesPlot
2d min idl		StringPlot
100			DnSavePlot
-1			iDtSavePlot [sec]
3d max tec		StringPlot
-1			DnSavePlot
60			iDtSavePlot [sec]
2d mc1 idl		StringPlot
100			DnSavePlot
-1			iDtSavePlot [sec]
2d mc2 idl		StringPlot
100			DnSavePlot
-1			iDtSavePlot [sec]

Default is nFilesPlot=0. \\

\noindent
StringPlot must contain the following 3 parts (separated with space)
in arbitrary order:
\begin{verbatim}
plotarea   = '2d', '3d'
plotvar    = 'min', 'max', 'mc1', 'mc2'
plotformat = 'tec', 'idl'
\end{verbatim}

\noindent
The plotformat specifies whether to output files for processing in either
Tecplot or Idl. Tecplot formatt is ascii, idl is binary (therefore, more
compact).

The plotarea string defines the region for the plots, 2d or 3d.
Currently the 3D output is implemented for Tecplot format only.
2d means writing variables on the two-dimensional ionospheric grid.
3d refers not to the third spatial dimension but to the energy dependences
(writing 3d is essentially writing the distribution function of ring
current population).

The plotvar string specifies which variables to write, either a minimum set,
or a maximum set (the 'rcm' string is preserved for backwards
compatibility only, and it is the same as the 'max' string), or
one of the custom sets 'mc1' or 'mc2'.
The 'min' value corresponds to the variables
'rho T P rho(MHD) T(MHD) P(MHD' in 2D and to 'eeta veff' in 3D.

The 'max' value corresponds to a lot of variables in 2D. For Tecplot format
they include the 'min' variables, but for IDL format the 'max' and
'min' variables are distinct, so you need to specify two IDL plot files
to get all the variables. In 3D only the Tecplot format is available,
and the 'max' variable set contains 'bndloc Vm |B| V birk alam eeta veff w'.

The values 'mc1' and 'mc2' were originally designed to be used by CCMC.
For 2d files, 'mc1' and 'mc2' mean the same thing and define a set of
both ionospheric quantities (potential, field-aligned currents, conductances)
as well as plasma moments of the ring current species.
For 3d, 'mc1' and 'mc2' will cause output of full particle energy spectra
(together with some extra variables); for 'mc1', these spectra will be in
the form of flux-tube content (proportional to the phase space density),
while for 'mc2' it will be differential particle fluxes.


The DnSavePlot and DtSavePlot integers define the plotting frequency
in number of time steps and number of seconds, respectively.
A negative value -1 means that the frequency parameter is ignored.
Note that DtSavePlot must be a multiple of the time step iDtRcm
(see the #TIMESTEP command).
</command>

</commandgroup>

<commandgroup name="TIME INTEGRATION">
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!  TIME INTEGRATION PARAMETERS  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
<command name="RESTART">
	<parameter name="DoRestart" type="logical" default="F"/>
	<rule expr="-f 'IM/restartIN/RCMrestart.rst' or not $DoRestart">
		File IM/restartIN/RCMrestart.rst should exist!
	</rule>

#RESTART
T			DoRestart

The DoRestart parameter determines if the RCM starts from the restart
files saved from a previous run, or from scratch via the standard input files.
The default is DoRestart = .false.
</command>

<command name="TIMESTEP">
	<parameter name="iDtRcm" type="integer" min="1" default="5"/>

#TIMESTEP
5			iDtRcm

The iDtRcm parameter defines the time step in seconds. The default
value is 5 seconds.
</command>

</commandgroup>

<commandgroup name="PHYSICS PARAMETERS">
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!! PHYSICS PARAMETERS  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
<command name="COMPOSITION">
  <parameter name="NameCompModel" type="string"  case="upper" input="select">
    <option name="FIXED" default="T"/>
    <option name="YOUNG"/>
  </parameter>
  <if expr="$NameCompModel eq 'FIXED'">
    <parameter name="FractionH" type="real" min="0" max="1" default="0.7"/>
    <parameter name="FractionO" type="real" min="0" max="1" default="1-$FractionH"/>
  </if>
  <if expr="$NameCompModel eq 'YOUNG'">
    <parameter name="F107" type="real"/>
  </if>

#COMPOSITION
FIXED                   NameCompModel
0.7      		FractionH
0.3      		FractionO

#COMPOSITION
YOUNG                   NameCompModel
128.3                   F107

When RCM is coupled with a single fluid MHD code, the boundary conditions
obtained from GM do not determine the composition of the plasma.
This command sets the assumed fraction of H+ and O+.   The combined global-inner
magnetospheric dynamics strongly depends on these values.
NameCompModel selects the model used to set the composition.  If "FIXED" is
chosen, the fraction of O+ and H+ must be given as the next two parameters.
The two need to add up to 1.0.
If NameCompModel is set to "YOUNG", the Young et al., 1982, JGR, Vol. 87 No. A11
empirical relationship is used to set composition dynamically.
This relationship sets the composition via Kp index (obtained via coupling
with the GM component) and the F10.7 proxy for solar EUV flux.  If this model
is selected, F10.7 flux must be given as a parameter.
Coupling with a multi-ion MHD code removes this adjustable parameter.

Default values are shown by the first example.

</command>

<command name="CHARGEEXCHANGE">
	<parameter name="UseChargeExchange" type="logical" default="T"/>
	<if expr="$UseChargeExchange">
		<parameter name="SunspotNumber"   type="real" min="0"
							default="125."/>
		<parameter name="F107MonthlyMean" type="real" min="0"
							default="169."/>
		<parameter name="DayOfYear" type="real" min="0" max="366"
							default="90." />
	</if>

#CHARGEEXCHANGE
T			UseChargeExchange
125.			SunspotNumber
169.			F107MonthlyMean
90.			DayOfYear

Activate charge exchange in RCM and specify solar conditions.
Default values are shown.
</command>

<command name="OUTERBOUNDARY">
	<parameter name="TypeOuterBoundary" type="string" input="select">
		<option name="ellipse" default="T"/>
		<option name="max"/>
	</parameter>
	<parameter name="xMaxNight" type="real" default="10" min="6"
				if="$TypeOuterBoundary eq 'ellipse'"/>

#OUTERBOUNDARY
ellipse			TypeBoundary
10.0			xMaxNight

Define the outer boundary for RCM. Options are "max" that defines the whole
closed field line region and "ellipse" that is fitted inside the closed field
line region. For "ellipse" xMaxNight defines the furthest distance
in the magnetotail of the ellipse. Default values are shown.
</command>

<command name="IONOSPHERE">
	<parameter name="TypeIonosphere" type="string" input="select">
		<option name="IE" default="T"/>
		<option name="RCM" />
	</parameter>

#IONOSPHERE
IE			TypeIonosphere

Define which ionosphere solver to use. Options are "IE" (SWMF solver) or "RCM"
(internal solver). Default is "IE".
</command>


<command name="PRECIPITATION">
	<parameter name="LossFactorH" type="real" default="0" min="0" max="1"/>
	<parameter name="LossFactorO" type="real" default="0" min="0" max="1"/>
	<parameter name="LossFactore" type="real" default="0" min="0" max="1"/>

#PRECIPITATION
0.3		LossFactore
0.0		LossFactorH
0.0		LossFactorO

Parameter that controls, in a somewhat crude manner,
the rate of particle precipitation into the
atmosphere (one for each species, total of 3). RCM code calculates
the rate of precipitation in the limit of strong pitch-angle scattering,
and the factors here reduce
this maximum possible rate. In other words, if the max. rate of precipitation
for electrons is R_ele, then in the code the rate will be set to
R_ele*LossFactore. If LossFactor=0, then there is no loss through precipitaton;
if LossFactor=1, the precipitation is maximum possible. This parameter is
used in two places in the RCM: one is a loss process for hot magnetospheric
population (right-hand side of the advection equation), the other one is
to evaluate conductance enhancements in the auroral oval (in the module
that computes conductances).

</command>

<command name="TEMPERATURE">
	<parameter name="TemperatureFactor" type="real" default="1" min="0"/>

#TEMPERATURE
3.0		TemperatureFactor

Artificially increase the temperature obtained from the magnetosphere model.
Default value is 1, i.e. no change.
</command>

<command name="DECAY">
	<parameter name="UseDecay" type="logical" default="F"/>
	<if expr="$UseDecay">
		<parameter name="DecayTimescale"   type="real" min="0"
						   default="36000."/>
	</if>

#DECAY
T			UseDecay
36000.  		DecayTimescale in seconds

If UseDecay is true, add an exponential decay to the ring current, so if there are
no other effects, it decays proportional to
\begin{verbatim}
exp(-(deltaT/DecayTimescale))
\end{verbatim}
This ad hoc decay can improve agreement with observed recovery after magnetic storms.
The value 10 hours shown by the example seems to be close to optimal.

The default is UseDecay false.
</command>

<command name="ELECTRONDECAY">
	<if expr="$UseDecay">
		<parameter name="TauElectronDecay"   type="real"
						   default="-1."/>
	</if>

#ELECTRONDECAY
-1.  		TauElectronDecay in seconds

Only read if #DECAY is active (UseDecay = T) and #DECAY appears before #ELECTRONDECAY
in PARAM.in. This parameter is introduced as an optional method of changing electron
decay rates separately from ion decay rates, and is applied in the same manner as
#DECAY.

The default value is shown above, and will set the electron decay rate to the
ion decay rate if TauElectronDecay &lt; 0.
</command>

</commandgroup>

</commandList>
